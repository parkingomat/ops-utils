# https://blog.detectify.com/2020/11/10/common-nginx-misconfigurations/
# @KeepSync any server log files with /usr/local/etc/newsyslog.conf.d/nginx-log-rotation.conf

# About `add_header` https://www.peterbe.com/plog/be-very-careful-with-your-add_header-in-nginx

# Our custom Cache-Control is different from Nginx's "expires max;" because it has:
#   - "immutable": so the client never sends a conditional revalidation
#   - "public": so it's can cache-forced by any cache

worker_processes auto;
load_module /usr/local/libexec/nginx/ngx_http_brotli_static_module.so;

events {
    worker_connections          1024;
}

http {
  types { # https://github.com/nginx/nginx/blob/master/conf/mime.types
      application/javascript    js;
      application/json          json;
      application/zip           zip;

      font/woff2                woff2;

      image/avif                avif;
      image/jpeg                jpg;
      image/png                 png;
      image/svg+xml             svg;
      image/webp                webp;
      image/x-icon              ico;

      text/css                  css;
      text/html                 html;
      text/plain                txt;
      text/xml                  xml;

      video/mp4                 mp4;
      video/webm                webm;
    }

    index                       index index.html;
    default_type                'text/html'; # This way we can simply have extensionless files as pretty routes
    charset                     utf-8;
    etag                        off;
    server_tokens               off;

    client_max_body_size        200k; # @KeepSync ServerSide/src/utils/HttpRequest.js jsonBody()

    sendfile                    on;
    tcp_nopush                  on;
    tcp_nodelay                 on;

    ssl_certificate             /usr/local/DistBundles/certs/uxtely.com.cert;
    ssl_certificate_key         /usr/local/DistBundles/certs/uxtely.com.key;
    ssl_session_cache           shared:SSL:1m;
    ssl_session_timeout         10m;
    ssl_prefer_server_ciphers   on;
    ssl_protocols               TLSv1.2 TLSv1.3;

    error_page                  400 /400;
    error_page                  401 /401;
    error_page                  403 /403;
    error_page                  404 /404;
    error_page                  503 /503;
    error_page                  402 405 406 407 408 409 410 /SORRY;
    error_page                  411 412 413 414 415 416 417 /SORRY;
    error_page                  418 421 422 424 425 426 428 /SORRY;
    error_page                  429 431 451 500 501 502 504 /SORRY;
    error_page                  505 506 507 508 510 511    /SORRY;

    # https://blog.uxtely.com/conditional-avif-for-video-posters
    map $http_accept $img_ext {
        ~image/avif             '.avif';
        ~image/webp             '.webp';
        default                 '';
    }

    # https://stackoverflow.com/a/45405406
    map $remote_addr $remote_addr_anon {
        ~(?P<ip>\d+\.\d+\.\d+)\. $ip.0;
        default                  0.0.0.0;
    }

    log_not_found               off; # Prevents logging 404s into the error_log
    log_format combined_anon    '$msec,"$remote_addr_anon","$server_name","$request_method","$request_uri",$status,$body_bytes_sent,"$http_referer","$http_user_agent"';

    error_log                   /var/log/nginx/error.log;
    access_log                  /var/log/nginx/access.log combined_anon buffer=32k flush=5s;

    root                        /usr/local/DistBundles/null; # Defaults to /usr/local/etc/nginx/html


    server {
        listen                  80;
        access_log              off;
        return                  301 https://$host$request_uri;
    }


    server {
        server_name             uxtely.com;  # www.uxtely.com is a CNAME
        listen                  443 ssl http2;
        root                    /usr/local/DistBundles/Website;

        location / {
            include             headers_for_documents;
            brotli_static       on;
        }
        location /media {
            include             headers_for_assets;
        }
        location ~ ^/media/.+\.png$ {
            include             headers_for_assets;
            try_files           $uri$img_ext $uri =404;
        }
        location ^~ /favicon {
            include             headers_for_assets;
            access_log          off;
        }
    }


    server {
        server_name             docs.uxtely.com;
        listen                  443 ssl http2;
        root                    /usr/local/DistBundles/UserDocs;

        location / {
            include             headers_for_documents;
            brotli_static       on;
        }
        location /media {
            include             headers_for_assets;
        }
        location ~ ^/media/.+\.png$ {
            include             headers_for_assets;
            try_files           $uri$img_ext $uri =404;
        }
        location ^~ /favicon {
            include             headers_for_assets;
            access_log          off;
        }
    }
}

# vim: set ft=nginx tabstop=4 softtabstop=4 :
